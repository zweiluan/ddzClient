// Generated by sprotodump. DO NOT EDIT!
// source: C:\Users\weiluan\Desktop\hub\server\ddz\sproto\c2s.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace C2SSprotoType { 
	public class getroominfo {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private roominfo _room; // tag 0
			public roominfo room {
				get { return _room; }
				set { base.has_field.set_field (0, true); _room = value; }
			}
			public bool HasRoom {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.room = base.deserialize.read_obj<roominfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.room, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class joinroom {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _index; // tag 0
			public Int64 index {
				get { return _index; }
				set { base.has_field.set_field (0, true); _index = value; }
			}
			public bool HasIndex {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.index = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.index, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			private roominfo _info; // tag 1
			public roominfo info {
				get { return _info; }
				set { base.has_field.set_field (1, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.info = base.deserialize.read_obj<roominfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.info, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class oncommand {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _cmd; // tag 0
			public string cmd {
				get { return _cmd; }
				set { base.has_field.set_field (0, true); _cmd = value; }
			}
			public bool HasCmd {
				get { return base.has_field.has_field (0); }
			}

			private string _parameters; // tag 1
			public string parameters {
				get { return _parameters; }
				set { base.has_field.set_field (1, true); _parameters = value; }
			}
			public bool HasParameters {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.cmd = base.deserialize.read_string ();
						break;
					case 1:
						this.parameters = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.cmd, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.parameters, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class register {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _psw; // tag 1
			public string psw {
				get { return _psw; }
				set { base.has_field.set_field (1, true); _psw = value; }
			}
			public bool HasPsw {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.psw = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.psw, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class roominfo : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private string _user1; // tag 0
		public string user1 {
			get { return _user1; }
			set { base.has_field.set_field (0, true); _user1 = value; }
		}
		public bool HasUser1 {
			get { return base.has_field.has_field (0); }
		}

		private string _user2; // tag 1
		public string user2 {
			get { return _user2; }
			set { base.has_field.set_field (1, true); _user2 = value; }
		}
		public bool HasUser2 {
			get { return base.has_field.has_field (1); }
		}

		private string _user3; // tag 2
		public string user3 {
			get { return _user3; }
			set { base.has_field.set_field (2, true); _user3 = value; }
		}
		public bool HasUser3 {
			get { return base.has_field.has_field (2); }
		}

		private bool _user1r; // tag 3
		public bool user1r {
			get { return _user1r; }
			set { base.has_field.set_field (3, true); _user1r = value; }
		}
		public bool HasUser1r {
			get { return base.has_field.has_field (3); }
		}

		private bool _user2r; // tag 4
		public bool user2r {
			get { return _user2r; }
			set { base.has_field.set_field (4, true); _user2r = value; }
		}
		public bool HasUser2r {
			get { return base.has_field.has_field (4); }
		}

		private bool _user3r; // tag 5
		public bool user3r {
			get { return _user3r; }
			set { base.has_field.set_field (5, true); _user3r = value; }
		}
		public bool HasUser3r {
			get { return base.has_field.has_field (5); }
		}

		public roominfo () : base(max_field_count) {}

		public roominfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.user1 = base.deserialize.read_string ();
					break;
				case 1:
					this.user2 = base.deserialize.read_string ();
					break;
				case 2:
					this.user3 = base.deserialize.read_string ();
					break;
				case 3:
					this.user1r = base.deserialize.read_boolean ();
					break;
				case 4:
					this.user2r = base.deserialize.read_boolean ();
					break;
				case 5:
					this.user3r = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.user1, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.user2, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.user3, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_boolean (this.user1r, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_boolean (this.user2r, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_boolean (this.user3r, 5);
			}

			return base.serialize.close ();
		}
	}


	public class signin {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _psw; // tag 1
			public string psw {
				get { return _psw; }
				set { base.has_field.set_field (1, true); _psw = value; }
			}
			public bool HasPsw {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.psw = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.psw, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				return base.serialize.close ();
			}
		}


	}


}


public class C2SProtocol : ProtocolBase {
	public static  C2SProtocol Instance = new C2SProtocol();
	private C2SProtocol() {
		Protocol.SetProtocol<getroominfo> (getroominfo.Tag);
		Protocol.SetResponse<C2SSprotoType.getroominfo.response> (getroominfo.Tag);

		Protocol.SetProtocol<joinroom> (joinroom.Tag);
		Protocol.SetRequest<C2SSprotoType.joinroom.request> (joinroom.Tag);
		Protocol.SetResponse<C2SSprotoType.joinroom.response> (joinroom.Tag);

		Protocol.SetProtocol<leaveroom> (leaveroom.Tag);

		Protocol.SetProtocol<oncommand> (oncommand.Tag);
		Protocol.SetRequest<C2SSprotoType.oncommand.request> (oncommand.Tag);

		Protocol.SetProtocol<ping> (ping.Tag);

		Protocol.SetProtocol<register> (register.Tag);
		Protocol.SetRequest<C2SSprotoType.register.request> (register.Tag);
		Protocol.SetResponse<C2SSprotoType.register.response> (register.Tag);

		Protocol.SetProtocol<signin> (signin.Tag);
		Protocol.SetRequest<C2SSprotoType.signin.request> (signin.Tag);
		Protocol.SetResponse<C2SSprotoType.signin.response> (signin.Tag);

		Protocol.SetProtocol<signout> (signout.Tag);

	}

	public class getroominfo {
		public const int Tag = 6;
	}

	public class joinroom {
		public const int Tag = 5;
	}

	public class leaveroom {
		public const int Tag = 7;
	}

	public class oncommand {
		public const int Tag = 8;
	}

	public class ping {
		public const int Tag = 1;
	}

	public class register {
		public const int Tag = 2;
	}

	public class signin {
		public const int Tag = 3;
	}

	public class signout {
		public const int Tag = 4;
	}

}